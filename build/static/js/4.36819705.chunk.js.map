{"version":3,"sources":["admin/clientQueries.js","admin/OrdersRow.js","admin/OrdersTable.js","admin/clientMutations.js","admin/OrdersConnector.js","admin/ProductsRow.js","admin/ProductsTable.js","admin/ProductsConnector.js","admin/ProductCreator.js","admin/ProductEditor.js","auth/AuthWrapper.js","auth/AuthPrompt.js","admin/Admin.js"],"names":["ordersSummaryQuery","gql","_templateObject","productsList","_templateObject2","product","_templateObject3","OrdersRow","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","calcTotal","products","reduce","total","p","quantity","price","toFixed","getShipping","order","shipped","react_default","a","createElement","className","render","props","id","name","email","onClick","toggleShipped","inherits","Component","OrdersTable","Fragment","totalSize","PaginationControls","assign","keys","orders","map","OrdersRow_OrdersRow","key","shipOrder","clientMutations_templateObject","storeProduct","clientMutations_templateObject2","updateProduct","clientMutations_templateObject3","deleteProduct","_templateObject4","vars","onlyShipped","page","pageSize","sort","OrdersConnector","compose","graphql","options","variables","_ref","_ref$data","data","loading","refetch","currentPage","pageCount","Math","ceil","navigateToPage","Number","setPageSize","size","sortKey","setSortProperty","_ref2","mutate","ProductsRow","category","Link","to","ProductsTable","prod","ProductsRow_ProductsRow","ConnectedProducts","update","cache","queryDetails","query","readQuery","filter","writeQuery","objectSpread","_ref3","ProductCreator","navigate","history","push","defaultAttrs","type","required","formModel","label","attrs","mutation","mode","disabled","toConsumableArray","item","defaultValue","toLowerCase","createClass","value","_this2","react_apollo_browser_umd","saveMutation","client","ValidatedForm","submitCallback","resetStore","cancelCallback","submitText","cancelText","ProductEditor","match","params","ProductCreator_ProductCreator","authWrapper","WrappedComponent","_temp","AuthContext","Consumer","context","AuthPrompt","withRouter","authenticate","credentials","catch","err","setState","errorMessage","message","then","state","e","click","ToggleLink","isAuthenticated","signout","Switch","Route","component","path","Redirect","ApolloClient","uri","GraphQlUrl","request","gqloperation","setContext","headers","Authorization","webToken"],"mappings":"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","file":"static/js/4.36819705.chunk.js","sourcesContent":["import gql from 'graphql-tag';\n\nexport const ordersSummaryQuery = gql`\n    query($onlyShipped: Boolean, $page:Int, $pageSize:Int, $sort:String){\n        orders(onlyUnshipped: $onlyShipped){\n            totalSize,\n            orders(page: $page, pageSize: $pageSize, sort: $sort) {\n                id, name, email, shipped\n                products { quantity, product { price }}\n            }\n        }\n    }\n`\n\nexport const productsList = gql`\n    query($page: Int, $pageSize: Int, $sort: String){\n        products{\n            totalSize,\n            products(page:$page, pageSize:$pageSize, sort:$sort){\n                id, name, category, price\n            }\n        }\n    }\n`\n\nexport const product = gql`\n    query($id: ID!){\n        product(id:$id){\n            id, name, description, category, price\n        }\n    }\n`","import React, { Component } from \"react\";\n\nexport class OrdersRow extends Component {\n    calcTotal = products => products.reduce((total, p)=> \n        total += p.quantity * p.product.price, 0).toFixed(2);\n\n    getShipping = (order) => order.shipped? \n        <i className=\"fa fa-shipping-fast text-success\" /> \n        : <i className=\"fa fa-exclamation-circle text-danger\" />;\n    \n    render = () => \n        <tr>\n            <td>{ this.props.order.id }</td>\n            <td>{this.props.order.name}</td>\n            <td>{ this.props.order.email }</td>\n            <td className=\"text-right\">${ this.calcTotal(this.props.order.products) }</td>\n            <td className=\"text-center\">\n                <button \n                        className=\"btn btn-sm btn-block bg-muted\"\n                        onClick={ this.props.toggleShipped }>\n                    { this.getShipping(this.props.order )}\n                    <span>{ this.props.order.shipped? \" Shipped\" : \" Pending\"}</span>\n                </button>\n            </td>\n        </tr>\n}","import React, { Component } from \"react\";\nimport { OrdersRow } from \"./OrdersRow\";\nimport { PaginationControls } from \"../PaginationControls\";\n\nexport class OrdersTable extends Component {\n    render = () => \n        <React.Fragment>\n            <h5 className=\"bg-secondary text-white text-center mt-2 p-2\">\n                {this.props.totalSize} Order(s)\n            </h5>\n            <div className=\"mx-2\">\n                <PaginationControls keys={[\"ID\", \"Name\"]} {...this.props}/>\n                <table className=\"table table-sm table-striped\">\n                    <thead>\n                        <tr><th>ID</th>\n                            <th>Name</th><th>Email</th>\n                            <th className=\"text-right\">Total</th>\n                            <th className=\"text-center\">Shipped</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        { this.props.orders.map(order =>\n                            <OrdersRow \n                                key={ order.id }\n                                order={ order} \n                                toggleShipped={()=>this.props.toggleShipped(order.id, !order.shipped)}\n                            />\n                        )\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </React.Fragment>\n}","import gql from \"graphql-tag\";\n\nexport const shipOrder = gql`\n    mutation($id: ID!, $shipped: Boolean!) {\n        shipOrder(id: $id, shipped: $shipped) {\n        id, shipped\n    }\n}`\n\nexport const storeProduct = gql`\n    mutation($product: productStore){\n        storeProduct(product:$product){\n            id, name, category, description, price\n        }\n    }\n`\n\nexport const updateProduct = gql`\n    mutation($product: productUpdate){\n        updateProduct(product:$product){\n            id, name, category, description, price\n        }\n    }\n`\n\nexport const deleteProduct = gql`\n    mutation($id: ID!){\n        deleteProduct(id:$id){\n            id\n        }\n    }\n`","import { graphql, compose } from 'react-apollo';\nimport { ordersSummaryQuery } from \"./clientQueries\";\nimport { OrdersTable } from \"./OrdersTable\";\n\nimport { shipOrder } from \"./clientMutations\";\n\nconst vars = {\n    onlyShipped: false, page: 1, pageSize: 10, sort: \"id\"\n};\n\nexport const OrdersConnector = compose(\n    graphql(ordersSummaryQuery, \n        {\n            options: (props) => ({ variables: vars}),\n            props: ({data: {loading, orders, refetch}}) => ({\n                totalSize: loading ? 0 : orders.totalSize,\n                orders: loading ? []: orders.orders,\n                currentPage: vars.page,\n                pageCount: loading ? 0 : Math.ceil(orders.totalSize / vars.pageSize),\n                navigateToPage: (page) => { vars.page = Number(page); refetch(vars)},\n                pageSize: vars.pageSize,\n                setPageSize: (size) => { vars.pageSize = Number(size); refetch(vars)},\n                sortKey: vars.sort,\n                setSortProperty: (key) => { vars.sort = key; refetch(vars)}\n            })\n        }),\n    graphql(shipOrder,\n        {\n            props: ({ mutate }) => ({ \n                toggleShipped: (id, shipped) => mutate({ variables: {id, shipped}})\n            })\n        })\n)(OrdersTable)","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport class ProductsRow extends Component {\n    render = () => \n        <tr>\n            <td>{ this.props.product.id }</td>\n            <td>{this.props.product.name}</td>\n            <td>{ this.props.product.category }</td>\n            <td className=\"text-right\"> ${ this.props.product.price.toFixed(2) } </td>\n            <td className=\"text-center\">\n                <button \n                    className=\"btn btn-sm btn-danger m-1\"\n                    onClick={()=>this.props.deleteProduct(this.props.product.id)}>\n                        Delete\n                </button>\n                <Link \n                    to={`/admin/products/${this.props.product.id}`}\n                    className=\"btn btn-sm btn-warning\">\n                        Edit\n                </Link>\n            </td>\n        </tr>\n}","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { PaginationControls } from \"../PaginationControls\";\nimport { ProductsRow } from \"./ProductsRow\";\n\nexport class ProductsTable extends Component {\n    render = () =>\n        <React.Fragment>\n            <h5 className=\"bg-secondary text-white text-center mt-2 p-2\">\n                {this.props.totalSize} Product(s)\n            </h5>\n            <div className=\"mx-2\">\n                <PaginationControls key={[\"ID\", \"Name\", \"Category\"] } {...this.props}/>\n                <table className=\"table table-sm table-striped\">\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>Name</th>\n                            <th>Category</th>\n                            <th className=\"text-right\">Price</th>\n                            <th className=\"text-center\">Operations</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.products.map(prod => \n                            <ProductsRow \n                                key={ prod.id } \n                                product={ prod } \n                                deleteProduct={ this.props.deleteProduct }/>\n                            )}\n                    </tbody>\n                </table>\n            </div>\n            <div className=\"text-center\">\n                <Link to=\"/admin/products/create\" className=\"btn btn-primary\">Create Product</Link>\n            </div>\n        </React.Fragment>\n}","import { graphql, compose } from \"react-apollo\";\nimport { ProductsTable } from \"./ProductsTable\";\nimport { productsList } from \"./clientQueries\";\nimport { deleteProduct } from \"./clientMutations\";\n\nconst vars = { page:1, pageSize:10, sort: \"id\" };\n\nexport const ConnectedProducts = compose(\n    graphql(productsList,\n        {\n            options: (props)=> ({ variables: vars }),\n            props: ({ data: {loading, products, refetch}}) => ({\n                totalSize: loading? 0:products.totalSize,\n                products: loading? []:products.products,\n                currentPage: vars.page,\n                pageCount: loading? 0:Math.ceil(products.totalSize/vars.pageSize),\n                navigateToPage: (page) => { vars.page=Number(page); refetch(vars)},\n                pageSize: vars.pageSize,\n                setPageSize: (size) => { vars.pageSize=Number(size); refetch(vars)},\n                sortKey: vars.sort,\n                setSortProperty: (key) => { vars.sort=key; refetch(vars)}\n            })\n        }\n    ),\n\n    graphql(deleteProduct,\n        {\n            options: {\n                update: (cache, { data: {deleteProduct: {id}}}) => {\n                    const queryDetails = { query: productsList, variables: vars};\n                    const data = cache.readQuery(queryDetails);\n                    data.products.products = data.products.products.filter(p => p.id !== id);\n                    data.products.totalSize = data.products.totalSize - 1;\n                    cache.writeQuery({...queryDetails, data})\n                }\n            },\n            props: ({ mutate }) => ({ deleteProduct: (id) => mutate({ variables: { id }})})\n        }\n    )\n)(ProductsTable)","import React, { Component } from \"react\";\nimport { ValidatedForm } from \"../forms/ValidatedForm\";\nimport { Mutation } from \"react-apollo\";\nimport { storeProduct, updateProduct } from \"./clientMutations\";\n\nexport class ProductCreator extends Component{\n    constructor(props){\n        super(props);\n        this.defaultAttrs = { type: \"text\", required: true };\n        this.formModel = [\n            { label: \"Name\" }, \n            { label: \"Description\"},\n            { label: \"Category\" },\n            { label: \"Price\", attrs: { type: \"number\"}}\n        ];\n        this.mutation = storeProduct;\n        if(this.props.mode === \"edit\"){\n            this.mutation = updateProduct;\n            this.formModel = [\n                { label: \"ID\", attrs: {disabled: true}},\n                ...this.formModel\n            ].map(item => ({\n                ...item,\n                attrs: { ...item.attrs, defaultValue: this.props.product[item.label.toLowerCase()] }\n            }))\n        }\n    }\n\n    navigate = () => this.props.history.push(\"/admin/products\");\n\n    render(){\n        return(\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col bg-secondary text-white mt-2\">\n                        <div className=\"navbar-brand\">Product Details</div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col m-2\">\n                        <Mutation mutation={this.mutation}>\n                            {\n                                (saveMutation, {client}) => {\n                                    return(\n                                        <ValidatedForm \n                                            formModel={this.formModel}\n                                            defaultAttrs={this.defaultAttrs}\n                                            submitCallback = {\n                                                data => {\n                                                    saveMutation({variables: \n                                                        { product: {...data, price: Number(data.price)}}});\n                                                    if(this.props.mode !== \"edit\"){\n                                                        client.resetStore()\n                                                    }\n                                                    this.navigate();\n                                                }\n                                            }\n                                            cancelCallback={this.navigate}\n                                            submitText=\"Save\"\n                                            cancelText=\"Cancel\" />\n                                    )\n                                }\n                            }\n                        </Mutation>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Query } from 'react-apollo';\nimport { ProductCreator } from './ProductCreator';\nimport { product } from './clientQueries';\n\nexport class ProductEditor extends Component{\n    render = () =>\n        <Query query={ product } variables={{ id: this.props.match.params.id }}>\n            {\n                ({ loading, data }) => {\n                    if(!loading){\n                        return <ProductCreator {...this.props} product={data.product} mode=\"edit\" />\n                    }\n                    return null;\n                }\n            }\n        </Query>\n}","import React, { Component } from \"react\";\nimport { AuthContext } from \"./AuthContext\";\n\nexport const authWrapper = (WrappedComponent) =>\n    class extends Component{\n        render = () => \n            <AuthContext.Consumer>\n                { context => <WrappedComponent {...this.props} {...context}/> }\n            </AuthContext.Consumer>\n    }","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { authWrapper } from \"./AuthWrapper\";\nimport { ValidatedForm } from \"../forms/ValidatedForm\";\n\nexport const AuthPrompt = withRouter(authWrapper(class extends Component{\n    constructor(props){\n        super(props);\n        this.state = { errorMessage: null };\n        this.defaultAttrs = { required: true };\n        this.formModel = [\n            { label: \"Username\", attrs: { defaultValue: \"admin\"}},\n            { label: \"Password\", attrs: { type: \"password\"} },\n        ];\n    }\n\n    authenticate = (credentials) => {\n        this.props.authenticate(credentials)\n            .catch(err => this.setState({ errorMessage: err.message}))\n            .then(this.props.history.push('/admin'))\n    }\n\n    render = () =>\n        <div className=\"container-fluid\">\n            <div className=\"row mt-2\">\n                <div className=\"col bg-secondary text-white\">\n                    <div className=\"navbar-brand\">Enter as an Admin</div>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col m-2\">\n                    {\n                        this.state.errorMessage != null &&\n                        <h4 className=\"bg-danger text-center text-white m-1 p-2\">\n                            { this.state.errorMessage }\n                        </h4>\n                    }\n                    <ValidatedForm \n                        formModel = { this.formModel }\n                        defaultAttrs = { this.defaultAttrs }\n                        submitCallback = { this.authenticate }\n                        submitText = \"Login\"\n                        cancelCallback = { () => this.props.history.push('/') }\n                        cancelText = \"Cancel\" />\n                </div>\n            </div>\n        </div>\n}))","import React, { Component } from \"react\";\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport { GraphQlUrl } from \"../data/Urls\";\nimport { OrdersConnector } from \"./OrdersConnector\";\n\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport { ToggleLink } from \"../shop/ToggleLink\";\nimport { ConnectedProducts } from \"./ProductsConnector\";\nimport { ProductEditor } from \"./ProductEditor\";\nimport { ProductCreator } from \"./ProductCreator\";\n\nimport { AuthPrompt } from \"../auth/AuthPrompt\";\nimport { authWrapper } from \"../auth/AuthWrapper\";\n\n/* const grapQlClient = new ApolloClient({ uri: GraphQlUrl }); */\n\nexport default authWrapper( class extends Component {\n    constructor(props){\n        super(props);\n        this.state={ click: false }\n        this.client = new ApolloClient({\n            uri: GraphQlUrl,\n            request: gqloperation => gqloperation.setContext({\n                headers: { Authorization: `Bearer<${this.props.webToken}>`}\n            })\n        })\n    }\n\n    render = () =>\n        <ApolloProvider client={ this.client }>\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col bg-info text-white\">\n                        <div className=\"navbar-brand\">Steven's Shop</div>\n                    </div>\n                </div>\n                <div className=\"row\">                    \n                    <div className=\"col-12 col-md-2 p-2\">\n                        <nav className=\"navbar navbar-expand-lg navbar-light bg-light m-0 p-0\">\n                            <button className=\"navbar-toggler\" type=\"button\" onClick={(e)=> this.setState((state)=>({click: !state.click}))}>\n                                <span className=\"navbar-toggler-icon\"></span>\n                            </button>\n                            <div className={`collapse navbar-collapse ${this.state.click? \"show\":\"\"}`}>\n                                <ul className=\"navbar-nav flex-md-column w-100  justify-content-between\">\n                                    <li className=\"nav-item\">\n                                        <ToggleLink to=\"/admin/products\">Products</ToggleLink>\n                                    </li>                                    \n                                    <li className=\"nav-item\">\n                                        <ToggleLink to=\"/admin/orders\">Orders</ToggleLink>\n                                    </li><br/>\n                                    {\n                                        !this.props.isAuthenticated &&  \n                                        <li className=\"nav-item mr-3\">\n                                            <ToggleLink to=\"/shop\" \n                                                className=\"nav-link btn btn-block btn-success m-2\">\n                                                    Go Back to Shop\n                                            </ToggleLink>\n                                        </li>\n                                    }\n                                    {\n                                        this.props.isAuthenticated &&\n                                        <li className=\"nav-item mr-3\">                                                            \n                                            <button \n                                                className=\"btn btn-block btn-success m-2\"\n                                                onClick={ this.props.signout }>\n                                                    Log Out\n                                            </button>\n                                        </li>\n                                    }\n                                </ul>\n                            </div>\n                        </nav>\n                    </div>\n                    <div className=\"col p-2\">\n                        <Switch>\n                            {\n                                !this.props.isAuthenticated &&\n                                <Route component={ AuthPrompt }/>\n                            }\n                            <Route path=\"/admin/orders\" component={OrdersConnector}/>\n                            <Route path=\"/admin/products/create\" component={ProductCreator}/>\n                            <Route path=\"/admin/products/:id\" component={ProductEditor}/>\n                            <Route path=\"/admin/products/\" component={ConnectedProducts}/>\n                            <Redirect to=\"/admin/products\"/>\n                        </Switch>\n                    </div>\n                </div>\n            </div>\n        </ApolloProvider>\n})"],"sourceRoot":""}